#+TITLE: TMP16A4's Emacs Config
#+DATE: 6/19/2023
#+AUTHOR: The Programming M16A4
#+PROPERTY: header-args:emacs-lisp :tangle yes :tangle init.el

*  _______ _____  __  __ __   __        _  _   _       ______                             _____             __ _       
* |__   __|  __ \|  \/  /_ | / /    /\ | || | ( )     |  ____|                           / ____|           / _(_)      
*    | |  | |__) | \  / || |/ /_   /  \| || |_|/ ___  | |__   _ __ ___   __ _  ___ ___  | |     ___  _ __ | |_ _  __ _ 
*    | |  |  ___/| |\/| || | '_ \ / /\ \__   _| / __| |  __| | '_ ` _ \ / _` |/ __/ __| | |    / _ \| '_ \|  _| |/ _` |
*    | |  | |    | |  | || | (_) / ____ \ | |   \__ \ | |____| | | | | | (_| | (__\__ \ | |___| (_) | | | | | | | (_| |
*    |_|  |_|    |_|  |_||_|\___/_/    \_\|_|   |___/ |______|_| |_| |_|\__,_|\___|___/  \_____\___/|_| |_|_| |_|\__, |
*                                                                                                                 __/ |
*                                                                                                                |___/ 

GitHub: https://github.com/The-Tech-Lord/dotfiles

* Package Manager
#+BEGIN_SRC emacs-lisp
(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/") t)
(package-initialize)
#+END_SRC

* Emacs Settings
** General
*** Tabs
#+BEGIN_SRC emacs-lisp
(setq-default tab-width 4)
(setq-default indent-tabs-mode t)
#+END_SRC

*** Line Number Column
#+BEGIN_SRC emacs-lisp
(setq column-number-mode t)
(global-display-line-numbers-mode)
#+END_SRC

** Disabled
#+BEGIN_SRC emacs-lisp
(setq inhibit-splash-screen t)                     ;; Startup Screen
(setq make-backup-files nil)
(setq backward-delete-char-untabify-method nil)

(scroll-bar-mode -1)
(menu-bar-mode -1)
(tool-bar-mode -1)
#+END_SRC

** Other
#+BEGIN_SRC emacs-lisp
(set-default 'truncate-line t)
(global-visual-line-mode t)
(windmove-default-keybindings)                             ;; Adds Window Switching Keybindings
(add-hook 'window-setup-hook 'toggle-frame-maximized t)    ;; Maximizes Window
#+END_SRC

** Language Specific (Major/Minor Mode)
*** CC Mode
**** C
#+BEGIN_SRC emacs-lisp
(setq c-default-style "linux")
(setq c-basic-offset 4)
#+END_SRC

* Org Mode
** ToDo
#+BEGIN_SRC emacs-lisp
(setq org-todo-keywords
		'((sequence "TODO" "IN-PROGRESS" "|" "DONE")
		  (sequence "BUG" "|" "FIXED")
		  )
		)
#+END_SRC

** Source Block
#+BEGIN_SRC emacs-lisp
(setq org-src-preserve-indentation t
    org-edit-src-content-indentation '0)
#+END_SRC

* Key Mappings
** Disabled
| Key       | Command             |
|-----------+---------------------|
| C-n       | next-line           |
| C-f       | forward-char        |
| C-b       | backward-char       |
| C-p       | previous-line       |
| M-<       | beginning-of-buffer |
| M->       | end-of-buffer       |
| C-<prior> | scroll-right        |
| C-<next>  | scroll-left         |
|-----------+---------------------|
| C-z       | suspend-frame       |
|-----------+---------------------|
| C-x t O   | tab-previous        |
| C-x t o   | tab-next            |
| C-x t 0   | tab-close           |
| C-x t 2   | tab-new             |

#+BEGIN_SRC emacs-lisp
(global-unset-key (kbd "C-n"))
(global-unset-key (kbd "C-f"))
(global-unset-key (kbd "C-b"))
(global-unset-key (kbd "C-p"))
(global-unset-key (kbd "M-<"))
(global-unset-key (kbd "M->"))
(global-unset-key (kbd "C-<prior>"))
(global-unset-key (kbd "C-<next>"))

(global-unset-key (kbd "C-z"))

(global-unset-key (kbd "C-x t 0"))
(global-unset-key (kbd "C-x t 2"))
(global-unset-key (kbd "C-x t O"))
(global-unset-key (kbd "C-x t o"))
#+END_SRC

** Global Bindings
*** Movement
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-<prior>") 'beginning-of-buffer)
(global-set-key (kbd "C-<next>") 'end-of-buffer)
#+END_SRC

*** Tabs
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-x t 0") 'tab-close)
(global-set-key (kbd "C-x t 2") 'tab-new)
#+END_SRC

*** VCS
#+BEGIN_SRC emacs-lisp

#+END_SRC

** Local Bindings
*** CC Mode
#+BEGIN_SRC emacs-lisp

#+END_SRC

* Other
#+BEGIN_SRC emacs-lisp
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes '(gruvbox-dark-medium))
 '(custom-safe-themes
 '("b1a691bb67bd8bd85b76998caf2386c9a7b2ac98a116534071364ed6489b695d" "fa49766f2acb82e0097e7512ae4a1d6f4af4d6f4655a48170d0a00bcb7183970" "3e374bb5eb46eb59dbd92578cae54b16de138bc2e8a31a2451bf6fdb0f3fd81b" "19a2c0b92a6aa1580f1be2deb7b8a8e3a4857b6c6ccf522d00547878837267e7" "2ff9ac386eac4dffd77a33e93b0c8236bb376c5a5df62e36d4bfa821d56e4e20" "72ed8b6bffe0bfa8d097810649fd57d2b598deef47c992920aef8b5d9599eefe" "d80952c58cf1b06d936b1392c38230b74ae1a2a6729594770762dc0779ac66b7" default))
 '(package-selected-packages
 '(toc-org csharp-mode yascroll vimrc-mode elcord gruvbox-theme)))
  (custom-set-faces
   ;; custom-set-faces was added by Custom.
   ;; If you edit it by hand, you could mess it up, so be careful.
   ;; Your init file should contain only one such instance.
   ;; If there is more than one, they won't work right.
   )
#+END_SRC
